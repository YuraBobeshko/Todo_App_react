{"version":3,"sources":["components/AddNewTodo/AddNewTodo.js","components/Header/Header.js","components/todoitem/todoitem.js","components/TodoList/TodoList.js","components/Main/Main.js","components/filter/filter.js","components/Footer/Footer.js","App.js","index.js"],"names":["AddNewTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputChange","event","setState","inputValue","target","value","submitTodoForm","preventDefault","onSubmit","state","prev","_objectSpread","placeholder","react_default","a","createElement","type","className","onChange","React","Component","Header","components_AddNewTodo_AddNewTodo","PureComponent","TodoItem","id","todo","editItem","todoitem_objectSpread","cancelEdit","which","title","_this$props","deleteItem","chooseFinishTask","changeTodoItem","_this$props$todo","status","edit","concat","key","checked","htmlFor","onDoubleClick","onClick","autoFocus","onKeyPress","TodoList","filteredTodoList","activeFilter","todoList","filter","_this$props2","map","todoitem","Main","toggleAllTodos","style","display","components_TodoList_TodoList","Filter","handleActiveFilter","href","Footer","clearCompletedTitle","some","todoListLength","clearCompleted","App","addNewTodo","fullTodo","todoId","App_objectSpread","toConsumableArray","workList","countRelevantTodo","countRelevantItem","forEach","chooseTask","findIndex","_this$state","allToggle","currentTodo","newTodo","copyTodoList","splice","fromJson","JSON","parse","localStorage","getItem","todoIdFromJson","todoListJson","stringify","setItem","_this$state2","components_Header_Header","components_Main_Main","components_Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"ifA6CeA,cA1Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,YAAc,SAACC,GACbR,EAAKS,SAAS,CACZC,WAAYF,EAAMG,OAAOC,SAVVZ,EAcnBa,eAAiB,SAACL,GAChBA,EAAMM,iBACNd,EAAKD,MAAMgB,SAASf,EAAKgB,MAAMN,YAC/BV,EAAKS,SAAS,SAACQ,GACb,4VAAAC,CAAA,GACKD,EADL,CAEEP,WAAY,QAjBhBV,EAAKgB,MAAQ,CACXN,WAAY,IAJGV,wEAyBV,IACCmB,EAAgBhB,KAAKJ,MAArBoB,YAER,OACEC,EAAAC,EAAAC,cAAA,QAAMP,SAAUZ,KAAKU,gBACnBO,EAAAC,EAAAC,cAAA,SACEC,KAAK,OACLJ,YAAaA,EACbK,UAAU,WACVZ,MAAOT,KAAKa,MAAMN,WAClBe,SAAUtB,KAAKI,sBApCAmB,IAAMC,WCchBC,mLAZJ,IACCb,EAAaZ,KAAKJ,MAAlBgB,SAER,OACEK,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAChBJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACO,EAAD,CAAYV,YAAY,yBAAyBJ,SAAUA,YAP9CW,IAAMI,+OCgGZC,cAhGb,SAAAA,EAAYhC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACjB/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMJ,KAORQ,YAAc,SAACC,GACbR,EAAKS,SAAS,CACZC,WAAYF,EAAMG,OAAOC,SAVVZ,EAcnBa,eAAiB,SAACL,GAAU,IACVwB,EAAShC,EAAKD,MAAtBkC,KAAQD,GACRtB,EAAeV,EAAKgB,MAApBN,WAERF,EAAMM,iBACNd,EAAKD,MAAMmC,SAASxB,EAAYsB,GAEhChC,EAAKS,SAAS,SAACQ,GACb,4VAAOkB,CAAA,GACFlB,EADL,CAEEP,WAAYA,OAxBCV,EA6BnBoC,WAAa,SAAC5B,GACZ,GAAoB,KAAhBA,EAAM6B,MAAV,CADsB,IAKNL,EAAShC,EAAKD,MAAtBkC,KAAQD,GACRtB,EAAeV,EAAKgB,MAApBN,WAERV,EAAKD,MAAMmC,SAASxB,EAAYsB,KAlChChC,EAAKgB,MAAQ,CACXN,WAAYV,EAAKD,MAAMkC,KAAKK,OAJbtC,wEAwCV,IAAAuC,EAQHpC,KAAKJ,MANPyC,EAFKD,EAELC,WACAC,EAHKF,EAGLE,iBACAC,EAJKH,EAILG,eAJKC,EAAAJ,EAKLN,KACEW,EANGD,EAMHC,OAAQC,EANLF,EAMKE,KAAMb,EANXW,EAMWX,GAAIM,EANfK,EAMeL,MAItB,OACElB,EAAAC,EAAAC,cAAA,MACEE,UAAS,GAAAsB,QAAgB,IAAXF,EACV,GACA,YAFK,cAAAE,OAGPD,EACA,UACA,IACFE,IAAKf,GAELZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,SACEC,KAAK,WACLC,UAAU,SACVwB,QAASJ,EACTnB,SAAU,kBAAMgB,EAAiBT,MAEnCZ,EAAAC,EAAAC,cAAA,SACE2B,QAAO,QAAAH,OAAUd,GACjBkB,cAAe,kBAAMR,EAAeV,KAEnCM,GAEHlB,EAAAC,EAAAC,cAAA,UACEC,KAAK,SACLC,UAAU,UACV2B,QAAS,kBAAMX,EAAWR,OAG7Ba,EACGzB,EAAAC,EAAAC,cAAA,QAAMP,SAAUZ,KAAKU,gBACrBO,EAAAC,EAAAC,cAAA,SACEC,KAAK,OACL6B,WAAW,EACX5B,UAAU,OACVZ,MAAOT,KAAKa,MAAMN,WAClBe,SAAUtB,KAAKI,YACf8C,WAAYlD,KAAKiC,cAGnB,WA3FWV,IAAMC,WCuCd2B,6MArCbC,iBAAmB,WAAM,IAAAhB,EACYvC,EAAKD,MAAhCyD,EADejB,EACfiB,aAAcC,EADClB,EACDkB,SAEtB,OAAQD,GACN,IAAK,SACH,OAAOC,EACJC,OAAO,SAAAzB,GAAI,OAAoB,IAAhBA,EAAKW,SACzB,IAAK,YACH,OAAOa,EACJC,OAAO,SAAAzB,GAAI,OAAoB,IAAhBA,EAAKW,SACzB,QACE,OAAOa,4EAIJ,IAAAE,EAMHxD,KAAKJ,MAJPyC,EAFKmB,EAELnB,WACAC,EAHKkB,EAGLlB,iBACAC,EAJKiB,EAILjB,eACAR,EALKyB,EAKLzB,SAGF,OACEd,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACXrB,KAAKoD,mBAAmBK,IAAI,SAAA3B,GAAI,OAAIb,EAAAC,EAAAC,cAACuC,EAAD,CACjC3B,SAAUA,EACVD,KAAMA,EACNO,WAAYA,EACZC,iBAAkBA,EAClBC,eAAgBA,cA/BLhB,IAAMC,WCsCdmC,mLArCJ,IAAAvB,EASHpC,KAAKJ,MAPP0D,EAFKlB,EAELkB,SACAjB,EAHKD,EAGLC,WACAC,EAJKF,EAILE,iBACAsB,EALKxB,EAKLwB,eACAP,EANKjB,EAMLiB,aACAd,EAPKH,EAOLG,eACAR,EARKK,EAQLL,SAGF,OACEd,EAAAC,EAAAC,cAAA,WAASE,UAAU,OAAOwC,MAAO,CAAEC,QAAS,UAC1C7C,EAAAC,EAAAC,cAAA,SACEC,KAAK,WACLS,GAAG,aACHR,UAAU,eAEZJ,EAAAC,EAAAC,cAAA,SACE2B,QAAQ,WACRE,QAASY,GAFX,wBAMA3C,EAAAC,EAAAC,cAAC4C,EAAD,CACEhC,SAAUA,EACVuB,SAAUA,EACVjB,WAAYA,EACZC,iBAAkBA,EAClBe,aAAcA,EACdd,eAAgBA,YA/BPhB,IAAMI,eCuCVqC,mLAvCJ,IAAA5B,EACsCpC,KAAKJ,MAA1CyD,EADDjB,EACCiB,aAAcY,EADf7B,EACe6B,mBAEtB,OACEhD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE+C,KAAK,KACL7C,UAA4B,QAAjBgC,EAAyB,WAAa,GACjDL,QAAS,kBAAMiB,EAAmB,SAHpC,QASFhD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE+C,KAAK,WACL7C,UAA4B,WAAjBgC,EAA4B,WAAa,GACpDL,QAAS,kBAAMiB,EAAmB,YAHpC,WASFhD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE+C,KAAK,cACL7C,UAA4B,aAAjBgC,EAA8B,WAAa,GACtDL,QAAS,kBAAMiB,EAAmB,eAHpC,sBA3BW1C,IAAMI,eCwCZwC,6MAtCbC,oBAAsB,WAGpB,OAFqBvE,EAAKD,MAAlB0D,SAGLe,KAAK,SAAAvC,GAAI,OAAoB,IAAhBA,EAAKW,kFAGd,IAAAL,EAMHpC,KAAKJ,MAJP0E,EAFKlC,EAELkC,eACAC,EAHKnC,EAGLmC,eACAlB,EAJKjB,EAILiB,aACAY,EALK7B,EAKL6B,mBAGF,OACEhD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASwC,MAAO,CAAEC,QAAS,UAC3C7C,EAAAC,EAAAC,cAAA,QAAME,UAAU,cACbiD,EACmB,IAAnBA,EAAuB,cAAgB,cAE1CrD,EAAAC,EAAAC,cAACoC,EAAD,CACEF,aAAcA,EACdY,mBAAoBA,IAEtBhD,EAAAC,EAAAC,cAAA,UACEC,KAAK,SACLC,UAAU,kBACVwC,MAAO,CAAEC,QAAS,SAClBd,QAAS,kBAAMuB,MAEdvE,KAAKoE,sBAAwB,kBAAoB,YAhCvC7C,IAAMC,kkBCoMZgD,cAhMb,SAAAA,EAAY5E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IACjB3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,KAAMJ,KAUR6E,WAAa,SAAC3C,GACZ,GAAa,KAATA,EAAJ,CAIA,IAAM4C,EAAW,CACfvC,MAAOL,EACPD,GAAIhC,EAAKgB,MAAM8D,OACflC,QAAQ,EACRC,MAAM,GAGR7C,EAAKS,SAAS,SAACQ,GACb,OAAO8D,EAAA,GACF9D,EADL,CAEEwC,SAAQ,GAAAX,OAAA7C,OAAA+E,EAAA,EAAA/E,CAAMgB,EAAKwC,UAAX,CAAqBoB,IAC7BC,OAAQ7D,EAAK6D,OAAS,QA3BT9E,EAgCnBwC,WAAa,SAACR,GAAO,IAEbiD,EADejF,EAAKgB,MAAlByC,SAELC,OAAO,SAAAzB,GAAI,OAAIA,EAAKD,KAAOA,IAE9BhC,EAAKS,SAAS,SAACQ,GACb,OAAO8D,EAAA,GACF9D,EADL,CAEEwC,SAASxD,OAAA+E,EAAA,EAAA/E,CAAKgF,QAxCDjF,EA6CnBkF,kBAAoB,WAClB,IAAIC,EAAoB,EAOxB,OANAnF,EAAKgB,MAAMyC,SAAS2B,QAAQ,SAACnD,IACP,IAAhBA,EAAKW,SACPuC,GAAqB,KAIlBA,GArDUnF,EAwDnByC,iBAAmB,SAACT,GAAO,IACjByB,EAAazD,EAAKgB,MAAlByC,SACFwB,EAAQhF,OAAA+E,EAAA,EAAA/E,CAAOwD,GACf4B,EAAaJ,EAChBK,UAAU,SAAArD,GAAI,OAAIA,EAAKD,KAAOA,KAED,IAAhCiD,EAASI,GAAYzC,OACjBqC,EAASI,GAAYzC,QAAS,EAC9BqC,EAASI,GAAYzC,QAAS,EAClC5C,EAAKS,SAAS,SAACQ,GACb,OAAO8D,EAAA,GACF9D,EADL,CAEEwC,SAASxD,OAAA+E,EAAA,EAAA/E,CAAKgF,QApEDjF,EAyEnB+D,eAAiB,WAAM,IAAAwB,EACWvF,EAAKgB,MAA7ByC,EADa8B,EACb9B,SAAU+B,EADGD,EACHC,UACZP,EAAQhF,OAAA+E,EAAA,EAAA/E,CAAOwD,GAEhB+B,EAGHP,EAASG,QAAQ,SAACnD,GAAD,OAAUA,EAAKW,QAAS,IAFzCqC,EAASG,QAAQ,SAACnD,GAAD,OAAUA,EAAKW,QAAS,IAK3C5C,EAAKS,SAAS,SAAAQ,GACZ,OAAO8D,EAAA,GACF9D,EADL,CAEEwC,SAASxD,OAAA+E,EAAA,EAAA/E,CAAKgF,GACdO,WAAYvE,EAAKuE,eAvFJxF,EA4FnB0E,eAAiB,WACf1E,EAAKS,SAAS,SAACQ,GACb,OAAO8D,EAAA,GACF9D,EADL,CAEEwC,SAASxD,OAAA+E,EAAA,EAAA/E,CAAKgB,EAAKwC,SAChBC,OAAO,SAAAzB,GAAI,OAAoB,IAAhBA,EAAKW,eAjGV5C,EAsGnBoE,mBAAqB,SAACxB,GACpB5C,EAAKS,SAAS,SAAAQ,GACZ,OAAO8D,EAAA,GACF9D,EADL,CAEEuC,aAAcZ,OA1GD5C,EA+GnB0C,eAAiB,SAACV,GAChB,IAAMyD,EAAczF,EAAKgB,MAAMyC,SAAS6B,UAAU,SAAArD,GAAI,OAAIA,EAAKD,KAAOA,IAChE0D,EAAOzF,OAAA+E,EAAA,EAAA/E,CAAOD,EAAKgB,MAAMyC,UAE/BiC,EAAQD,GAAa5C,MAAO,EAE5B7C,EAAKS,SAAS,SAACQ,GACb,OAAO8D,EAAA,GACF9D,EADL,CAEEwC,SAASxD,OAAA+E,EAAA,EAAA/E,CAAKyF,QAxHD1F,EA6HnBkC,SAAW,SAACxB,EAAYsB,GAAO,IACrByB,EAAazD,EAAKgB,MAAlByC,SACFkC,EAAY1F,OAAA+E,EAAA,EAAA/E,CAAOwD,GACnBgC,EAAcE,EAAaL,UAAU,SAAArD,GAAI,OAAIA,EAAKD,KAAOA,IAC/D2D,EAAaF,GAAbV,EAAA,GACKtB,EAASgC,GADd,CAEEnD,MAAO5B,EACPmC,MAAM,IAGHnC,GACHiF,EAAaC,OAAOH,EAAa,GAGnCzF,EAAKS,SAAS,SAACQ,GACb,OAAO8D,EAAA,GACF9D,EADL,CAEEwC,SAASxD,OAAA+E,EAAA,EAAA/E,CAAK0F,QA3IlB3F,EAAKgB,MAAQ,CACXyC,SAAU,GACVqB,OAAQ,EACRU,WAAW,EACXhC,aAAc,OAPCxD,mFAoJjB,IAAM6F,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAC3DC,EAAiBF,aAAaC,QAAQ,UAC5C9F,KAAKM,SAAS,SAAAQ,GACZ,OAAO8D,EAAA,GACF9D,EADL,CAEEwC,SAASxD,OAAA+E,EAAA,EAAA/E,CAAK4F,GACdf,QAASoB,mDAMb,IAAMC,EAAeL,KAAKM,UAAUjG,KAAKa,MAAMyC,UAC/CuC,aAAaK,QAAQ,WAAYF,GACjCH,aAAaK,QAAQ,SAAUlG,KAAKa,MAAM8D,yCAGnC,IAAAwB,EAC4BnG,KAAKa,MAAhCyC,EADD6C,EACC7C,SAAUD,EADX8C,EACW9C,aAElB,OACEpC,EAAAC,EAAAC,cAAA,WAASE,UAAU,WACjBJ,EAAAC,EAAAC,cAACiF,EAAD,CAAQxF,SAAUZ,KAAKyE,aACvBxD,EAAAC,EAAAC,cAACkF,EAAD,CACE/C,SAAUA,EACVjB,WAAYrC,KAAKqC,WACjBC,iBAAkBtC,KAAKsC,iBACvBsB,eAAgB5D,KAAK4D,eACrBP,aAAcA,EACdd,eAAgBvC,KAAKuC,eACrBR,SAAU/B,KAAK+B,WAEjBd,EAAAC,EAAAC,cAACmF,EAAD,CACEhC,eAAgBtE,KAAK+E,oBACrBzB,SAAUtD,KAAKa,MAAMyC,SACrBiB,eAAgBvE,KAAKuE,eACrBlB,aAAcA,EACdY,mBAAoBjE,KAAKiE,6BA1LjB1C,IAAMC,WCAxB+E,IAASC,OACPvF,EAAAC,EAAAC,cAACsF,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.08ccc7ac.chunk.js","sourcesContent":["import React from 'react';\n\nclass AddNewTodo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: '',\n    };\n  }\n\n  inputChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  submitTodoForm = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.inputValue);\n    this.setState((prev) => {\n      return {\n        ...prev,\n        inputValue: '',\n      };\n    });\n  }\n\n  render() {\n    const { placeholder } = this.props;\n\n    return (\n      <form onSubmit={this.submitTodoForm}>\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          className=\"new-todo\"\n          value={this.state.inputValue}\n          onChange={this.inputChange}\n        />\n      </form>\n    );\n  }\n}\n\nexport default AddNewTodo;\n","import React from 'react';\nimport AddNewTodo from '../AddNewTodo/AddNewTodo';\n\nclass Header extends React.PureComponent {\n  render() {\n    const { onSubmit } = this.props;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <AddNewTodo placeholder=\"What needs to be done?\" onSubmit={onSubmit} />\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: this.props.todo.title,\n    };\n  }\n\n  inputChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  submitTodoForm = (event) => {\n    const { todo: { id } } = this.props;\n    const { inputValue } = this.state;\n\n    event.preventDefault();\n    this.props.editItem(inputValue, id);\n\n    this.setState((prev) => {\n      return {\n        ...prev,\n        inputValue: inputValue,\n      };\n    });\n  }\n\n  cancelEdit = (event) => {\n    if (event.which !== 27) {\n      return;\n    }\n\n    const { todo: { id } } = this.props;\n    const { inputValue } = this.state;\n\n    this.props.editItem(inputValue, id);\n  }\n\n  render() {\n    const {\n      deleteItem,\n      chooseFinishTask,\n      changeTodoItem,\n      todo: {\n        status, edit, id, title,\n      },\n    } = this.props;\n\n    return (\n      <li\n        className={`${status === false\n          ? ''\n          : 'completed'}\n        ${edit\n        ? 'editing'\n        : ''}`}\n        key={id}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={status}\n            onChange={() => chooseFinishTask(id)}\n          />\n          <label\n            htmlFor={`todo-${id}`}\n            onDoubleClick={() => changeTodoItem(id)}\n          >\n            {title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => deleteItem(id)}\n          />\n        </div>\n        {edit\n          ? <form onSubmit={this.submitTodoForm}>\n            <input\n              type=\"text\"\n              autoFocus={true}\n              className=\"edit\"\n              value={this.state.inputValue}\n              onChange={this.inputChange}\n              onKeyPress={this.cancelEdit}\n            />\n          </form>\n          : ''}\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../todoitem/todoitem';\n\nclass TodoList extends React.Component {\n  filteredTodoList = () => {\n    const { activeFilter, todoList } = this.props;\n\n    switch (activeFilter) {\n      case 'active':\n        return todoList\n          .filter(todo => todo.status === false);\n      case 'completed':\n        return todoList\n          .filter(todo => todo.status === true);\n      default:\n        return todoList;\n    }\n  }\n\n  render() {\n    const {\n      deleteItem,\n      chooseFinishTask,\n      changeTodoItem,\n      editItem,\n    } = this.props;\n\n    return (\n      <ul className=\"todo-list\">\n        {this.filteredTodoList().map(todo => <TodoItem\n            editItem={editItem}\n            todo={todo}\n            deleteItem={deleteItem}\n            chooseFinishTask={chooseFinishTask}\n            changeTodoItem={changeTodoItem}\n          />)}\n      </ul>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from '../TodoList/TodoList';\n\nclass Main extends React.PureComponent {\n  render() {\n    const {\n      todoList,\n      deleteItem,\n      chooseFinishTask,\n      toggleAllTodos,\n      activeFilter,\n      changeTodoItem,\n      editItem,\n    } = this.props;\n\n    return (\n      <section className=\"main\" style={{ display: 'block' }}>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n        />\n        <label\n          htmlFor=\"mark-all\"\n          onClick={toggleAllTodos}\n        >\n          Mark all as complete\n        </label>\n        <TodoList\n          editItem={editItem}\n          todoList={todoList}\n          deleteItem={deleteItem}\n          chooseFinishTask={chooseFinishTask}\n          activeFilter={activeFilter}\n          changeTodoItem={changeTodoItem}\n        />\n      </section>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nclass Filter extends React.PureComponent {\n  render() {\n    const { activeFilter, handleActiveFilter } = this.props;\n\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={activeFilter === 'all' ? 'selected' : ''}\n            onClick={() => handleActiveFilter('all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={activeFilter === 'active' ? 'selected' : ''}\n            onClick={() => handleActiveFilter('active')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={activeFilter === 'comleted' ? 'selected' : ''}\n            onClick={() => handleActiveFilter('completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default Filter;\n","import React from 'react';\nimport Filter from '../filter/filter';\n\nclass Footer extends React.Component {\n  clearCompletedTitle = () => {\n    const { todoList } = this.props;\n\n    return todoList\n      .some(todo => todo.status === true);\n  }\n\n  render() {\n    const {\n      todoListLength,\n      clearCompleted,\n      activeFilter,\n      handleActiveFilter,\n    } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {todoListLength}\n          {todoListLength !== 1 ? \" items left\" : \" item left\"}\n        </span>\n        <Filter\n          activeFilter={activeFilter}\n          handleActiveFilter={handleActiveFilter}\n        />\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: 'block' }}\n          onClick={() => clearCompleted()}\n        >\n          {this.clearCompletedTitle() ? 'Clear completed' : ''}\n        </button>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoList: [],\n      todoId: 1,\n      allToggle: false,\n      activeFilter: 'all',\n    };\n  }\n\n  addNewTodo = (todo) => {\n    if (todo === '') {\n      return;\n    }\n\n    const fullTodo = {\n      title: todo,\n      id: this.state.todoId,\n      status: false,\n      edit: false,\n    };\n\n    this.setState((prev) => {\n      return {\n        ...prev,\n        todoList: [...prev.todoList, fullTodo],\n        todoId: prev.todoId + 1,\n      };\n    });\n  }\n\n  deleteItem = (id) => {\n    const { todoList } = this.state;\n    const workList = todoList\n      .filter(todo => todo.id !== id);\n\n    this.setState((prev) => {\n      return {\n        ...prev,\n        todoList: [...workList],\n      };\n    });\n  }\n\n  countRelevantTodo = () => {\n    let countRelevantItem = 0;\n    this.state.todoList.forEach((todo) => {\n      if (todo.status === false) {\n        countRelevantItem += 1;\n      }\n    });\n\n    return countRelevantItem;\n  }\n\n  chooseFinishTask = (id) => {\n    const { todoList } = this.state;\n    const workList = [...todoList];\n    const chooseTask = workList\n      .findIndex(todo => todo.id === id);\n\n    workList[chooseTask].status === true\n      ? workList[chooseTask].status = false\n      : workList[chooseTask].status = true;\n    this.setState((prev) => {\n      return {\n        ...prev,\n        todoList: [...workList],\n      };\n    });\n  }\n\n  toggleAllTodos = () => {\n    const { todoList, allToggle } = this.state;\n    const workList = [...todoList];\n\n    if (!allToggle) {\n      workList.forEach((todo) => todo.status = true);\n    } else {\n      workList.forEach((todo) => todo.status = false);\n    }\n\n    this.setState(prev => {\n      return {\n        ...prev,\n        todoList: [...workList],\n        allToggle: !prev.allToggle,\n      };\n    });\n  }\n\n  clearCompleted = () => {\n    this.setState((prev) => {\n      return {\n        ...prev,\n        todoList: [...prev.todoList\n          .filter(todo => todo.status === false)],\n      };\n    });\n  }\n\n  handleActiveFilter = (status) => {\n    this.setState(prev => {\n      return {\n        ...prev,\n        activeFilter: status,\n      };\n    });\n  }\n\n  changeTodoItem = (id) => {\n    const currentTodo = this.state.todoList.findIndex(todo => todo.id === id);\n    const newTodo = [...this.state.todoList];\n\n    newTodo[currentTodo].edit = true;\n\n    this.setState((prev) => {\n      return {\n        ...prev,\n        todoList: [...newTodo],\n      };\n    });\n  }\n\n  editItem = (inputValue, id) => {\n    const { todoList } = this.state;\n    const copyTodoList = [...todoList];\n    const currentTodo = copyTodoList.findIndex(todo => todo.id === id);\n    copyTodoList[currentTodo] = {\n      ...todoList[currentTodo],\n      title: inputValue,\n      edit: false,\n    };\n\n    if (!inputValue) {\n      copyTodoList.splice(currentTodo, 1);\n    }\n\n    this.setState((prev) => {\n      return {\n        ...prev,\n        todoList: [...copyTodoList],\n      };\n    });\n  }\n\n  componentDidMount() {\n    const fromJson = JSON.parse(localStorage.getItem('todoList')) || [];\n    const todoIdFromJson = localStorage.getItem('todoId');\n    this.setState(prev => {\n      return {\n        ...prev,\n        todoList: [...fromJson],\n        todoId: +todoIdFromJson,\n      };\n    });\n  }\n\n  componentDidUpdate() {\n    const todoListJson = JSON.stringify(this.state.todoList);\n    localStorage.setItem('todoList', todoListJson);\n    localStorage.setItem('todoId', this.state.todoId);\n  }\n\n  render() {\n    const { todoList, activeFilter } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <Header onSubmit={this.addNewTodo} />\n        <Main\n          todoList={todoList}\n          deleteItem={this.deleteItem}\n          chooseFinishTask={this.chooseFinishTask}\n          toggleAllTodos={this.toggleAllTodos}\n          activeFilter={activeFilter}\n          changeTodoItem={this.changeTodoItem}\n          editItem={this.editItem}\n        />\n        <Footer\n          todoListLength={this.countRelevantTodo()}\n          todoList={this.state.todoList}\n          clearCompleted={this.clearCompleted}\n          activeFilter={activeFilter}\n          handleActiveFilter={this.handleActiveFilter}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}